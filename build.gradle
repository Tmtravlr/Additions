buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = project.properties['version']
group = "com.tmtravlr.additions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Additions"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.properties['forge_version']
    runDir = "run"
    replace "@VERSION@", project.version
    mappings = "snapshot_20171003"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.k-4u.nl"
	}
	maven {
		// CurseMaven is a tool for getting CurseForge files, but using
		// the file ID instead of the Jar name. See https://www.cursemaven.com/
		// for more information.
		name 'CurseMaven'
		url 'https://www.cursemaven.com'
	}
}

dependencies {
    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${jei_mc_version}:${jei_version}:api"

    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${jei_mc_version}:${jei_version}"

    // Get LootOverhaul without requiring manual download
    // curse.maven means it uses the CurseMaven "repository"
    // LootOverhaul-1.2 is just a friendly name.
    // 2711741 is the LootOverhaul File ID
    provided group: 'curse.maven', name: 'LootOverhaul-1.2', version: '2711741'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
